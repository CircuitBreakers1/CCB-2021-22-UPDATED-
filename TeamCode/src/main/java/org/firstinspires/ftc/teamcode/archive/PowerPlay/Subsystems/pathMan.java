package org.firstinspires.ftc.teamcode.archive.PowerPlay.Subsystems;

import static org.firstinspires.ftc.teamcode.archive.PowerPlay.Subsystems.Robot.*;
import static org.firstinspires.ftc.teamcode.archive.PowerPlay.Subsystems.functionType.*;


public class pathMan {
    private float currentX, currentY, startX, startY, endX, endY, currentRot, m, b;
    private boolean invertedFunction = false; //For lines that are straight up and down we need to use a workaround
    private functionType FunctionType;

    public pathMan(pathType PathType, float endXPoint, float endYPoint) {
        if(currentY == endY) {
            invertedFunction = true;
            this.currentY = xLoc;
            this.currentX = yLoc;
            this.endX = endYPoint;
            this.endY = endXPoint;
        } else {
            this.currentX = xLoc;
            this.currentY = yLoc;
            this.currentRot = rotation;
            this.endX = endXPoint;
            this.endY = endYPoint;
        }



        this.FunctionType = LINE;

        /*
         * Formula for straight line using two points:
         * y = ((x2-x1)/(y2-y1))(x-x1) + y1
         * Simplified down:
         * y = mx + (-mx1+y1)
         * y = mx + b
         */
        this.m = (endX - currentX) / (endY - currentY);
        this.b = -1*m*currentX + currentY;
    }

    public pathMan(pathType PathType, float endXPoint, float endYPoint, float a) {

    }


    /**
     * Finds the Y deviation of the robot from the given X based on the function generated by the object. <p></p>
     * Does not call {@link Robot#updateLocation() updateLocation()} and should usually be called outside.
     * @return Returns Y deviation from the X value of the function generated
     */
    public float getYDeviation() {

        float intendedY = 0;
        if(this.FunctionType == LINE) {
            if(!invertedFunction) {
                intendedY = this.m*xLoc + this.b;
                return yLoc - intendedY;
            } else {
                intendedY = this.m*yLoc + this.b;
                return xLoc - intendedY;
            }

        }
        if(this.FunctionType == ARC) {
            return 69;
        }

        return 69; //appease the java
    }



}

enum functionType {
    LINE, ARC
}

