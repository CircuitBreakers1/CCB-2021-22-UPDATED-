package org.firstinspires.ftc.teamcode;

import static org.firstinspires.ftc.teamcode.Robot.*;
import static org.firstinspires.ftc.teamcode.functionType.*;
import static org.firstinspires.ftc.teamcode.pathType.*;


public class pathMan {
    private float currentX, currentY, startX, startY, endX, endY, currentRot, m, b;
    private functionType FunctionType;

    public pathMan(pathType PathType, float endXPoint, float endYPoint) throws wrongInformationException {
        this.currentX = xLoc;
        this.currentY = yLoc;
        this.currentRot = rotation;
        this.endX = endXPoint;
        this.endY = endYPoint;

        if(PathType == ARC_NO_TURN || PathType == ARC_TURN_TO) {
            throw new wrongInformationException();
        }

        this.FunctionType = LINE;

        /*
         * Formula for straight line using two points:
         * y = ((x2-x1)/(y2-y1))(x-x1) + y1
         * Simplified down:
         * y = mx + (-mx1+y1)
         * y = mx + b
         */
        this.m = (endX - currentX) / (endY - currentY);
        this.b = -1*m*currentX + currentY;
    }

    public pathMan(pathType PathType, float endXPoint, float endYPoint, float a) {

    }


    /**
     * Finds the Y deviation of the robot from the given X based on the function generated by the object. <p></p>
     * Does not call {@link Robot#updateLocation() updateLocation()} and should usually be called outside.
     * @return Returns Y deviation from the X value of the function generated
     */
    public float getYDeviation() {
        float intendedY = 0;
        if(this.FunctionType == LINE) {
            intendedY = this.m*xLoc + b;
        }
        return yLoc - intendedY;
    }



}

enum pathType {
    STRAIGHT, STRAIGHT_NO_TURN, STRAIGHT_TURN_TO, ARC_TURN_TO, ARC_NO_TURN
}

enum functionType {
    LINE, ARC
}

